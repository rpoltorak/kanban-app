// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lane Component to match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    cards={
      Array [
        "21",
        "22",
        "23",
      ]
    }
    deleteLane={[MockFunction]}
    id="1"
    title="some title"
    updateTitle={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="lane__title"
        >
          <Editable
            onChange={[MockFunction]}
            placeholder="title"
            value="some title"
          />
          <button
            className="btn--delete"
            onClick={[MockFunction]}
          >
            ×
          </button>
        </div>,
        <div>
          <Connect(Component)
            id="21"
            laneId="1"
          />
          <Connect(Component)
            id="22"
            laneId="1"
          />
          <Connect(Component)
            id="23"
            laneId="1"
          />
        </div>,
        <Connect(NewCard)
          laneId="1"
        />,
      ],
      "className": "lane",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Editable
              onChange={[MockFunction]}
              placeholder="title"
              value="some title"
            />,
            <button
              className="btn--delete"
              onClick={[MockFunction]}
            >
              ×
            </button>,
          ],
          "className": "lane__title",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onChange": [MockFunction],
              "placeholder": "title",
              "value": "some title",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "×",
              "className": "btn--delete",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": "×",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(Component)
              id="21"
              laneId="1"
            />,
            <Connect(Component)
              id="22"
              laneId="1"
            />,
            <Connect(Component)
              id="23"
              laneId="1"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "21",
            "nodeType": "class",
            "props": Object {
              "id": "21",
              "laneId": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "22",
            "nodeType": "class",
            "props": Object {
              "id": "22",
              "laneId": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "23",
            "nodeType": "class",
            "props": Object {
              "id": "23",
              "laneId": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "laneId": "1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="lane__title"
          >
            <Editable
              onChange={[MockFunction]}
              placeholder="title"
              value="some title"
            />
            <button
              className="btn--delete"
              onClick={[MockFunction]}
            >
              ×
            </button>
          </div>,
          <div>
            <Connect(Component)
              id="21"
              laneId="1"
            />
            <Connect(Component)
              id="22"
              laneId="1"
            />
            <Connect(Component)
              id="23"
              laneId="1"
            />
          </div>,
          <Connect(NewCard)
            laneId="1"
          />,
        ],
        "className": "lane",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Editable
                onChange={[MockFunction]}
                placeholder="title"
                value="some title"
              />,
              <button
                className="btn--delete"
                onClick={[MockFunction]}
              >
                ×
              </button>,
            ],
            "className": "lane__title",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onChange": [MockFunction],
                "placeholder": "title",
                "value": "some title",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "×",
                "className": "btn--delete",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": "×",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(Component)
                id="21"
                laneId="1"
              />,
              <Connect(Component)
                id="22"
                laneId="1"
              />,
              <Connect(Component)
                id="23"
                laneId="1"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "21",
              "nodeType": "class",
              "props": Object {
                "id": "21",
                "laneId": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "22",
              "nodeType": "class",
              "props": Object {
                "id": "22",
                "laneId": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "23",
              "nodeType": "class",
              "props": Object {
                "id": "23",
                "laneId": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "laneId": "1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
